<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Littlehui&#39;s Notes</title>
  
  <subtitle>天地那么大，世界那么辽阔。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.lilhui.com/"/>
  <updated>2019-07-28T10:02:40.548Z</updated>
  <id>http://www.lilhui.com/</id>
  
  <author>
    <name>Littlehui</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>迭代器模式</title>
    <link href="http://www.lilhui.com/2019/07/28/java/patterndesign/patterndesign_16/"/>
    <id>http://www.lilhui.com/2019/07/28/java/patterndesign/patterndesign_16/</id>
    <published>2019-07-28T10:01:09.000Z</published>
    <updated>2019-07-28T10:02:40.548Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;h3 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot; title=&quot;实现&quot;&gt;&lt;/a&gt;实现&lt;/h3&gt;&lt;h3 id
      
    
    </summary>
    
      <category term="java" scheme="http://www.lilhui.com/categories/java/"/>
    
      <category term="设计模式" scheme="http://www.lilhui.com/categories/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="迭代器模式" scheme="http://www.lilhui.com/tags/%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>责任链模式</title>
    <link href="http://www.lilhui.com/2019/07/28/java/patterndesign/patterndesign_17/"/>
    <id>http://www.lilhui.com/2019/07/28/java/patterndesign/patterndesign_17/</id>
    <published>2019-07-28T10:01:09.000Z</published>
    <updated>2019-07-28T10:02:40.554Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;h3 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot; title=&quot;实现&quot;&gt;&lt;/a&gt;实现&lt;/h3&gt;&lt;h3 id
      
    
    </summary>
    
      <category term="java" scheme="http://www.lilhui.com/categories/java/"/>
    
      <category term="设计模式" scheme="http://www.lilhui.com/categories/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="责任链模式" scheme="http://www.lilhui.com/tags/%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>linux dump现场工具</title>
    <link href="http://www.lilhui.com/2019/07/17/linux/linux_6/"/>
    <id>http://www.lilhui.com/2019/07/17/linux/linux_6/</id>
    <published>2019-07-17T06:48:48.000Z</published>
    <updated>2019-07-17T07:19:41.423Z</updated>
    
    <content type="html"><![CDATA[<h2 id="linux-dump工具"><a href="#linux-dump工具" class="headerlink" title="linux dump工具"></a>linux dump工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#!/usr/bin/env bash</span></div><div class="line"></div><div class="line"><span class="comment">### use demo ###</span></div><div class="line"><span class="comment"># 1)upload dump.sh</span></div><div class="line"><span class="comment"># 2)dos2unix dump.sh;chmod +x dump.sh</span></div><div class="line"><span class="comment"># 3)usage: </span></div><div class="line"><span class="comment">#   1. /data/sh/java/dump.sh /tmp/dump /usr/local/java/jdk1.8.0_05 23554</span></div><div class="line"><span class="comment">#   2. /data/sh/java/dump.sh /tmp/dump /usr/local/java/jdk1.8.0_05 23554 -F</span></div><div class="line"></div><div class="line"><span class="comment">### parameter description ###</span></div><div class="line"><span class="comment"># 1 ./tmp/dump is save dump file dir. </span></div><div class="line"><span class="comment"># 2 /usr/local/java/jdk1.8.0_05 is java_home. </span></div><div class="line"><span class="comment"># 3 23554 is java-pid. </span></div><div class="line"><span class="comment"># 4 -F force jvm dum, optional.</span></div><div class="line"></div><div class="line"><span class="built_in">declare</span> SNAPSHOT_BASE_DIRECTORY=<span class="variable">$1</span></div><div class="line"><span class="built_in">declare</span> JAVA_HOME=<span class="variable">$2</span></div><div class="line"><span class="built_in">declare</span> PID=<span class="variable">$3</span></div><div class="line"><span class="built_in">declare</span> JVM_FORCE_OPTS=<span class="variable">$4</span></div><div class="line"></div><div class="line"><span class="comment"># remove the last '/' char</span></div><div class="line">JAVA_HOME=<span class="variable">$&#123;JAVA_HOME/%\//&#125;</span></div><div class="line">SNAPSHOT_BASE_DIRECTORY=<span class="variable">$&#123;SNAPSHOT_BASE_DIRECTORY/%\//&#125;</span></div><div class="line"></div><div class="line"><span class="built_in">declare</span> FULL_TIME_FORMAT=<span class="string">"+%Y-%m-%d_%H_%M_%S_%N"</span></div><div class="line"><span class="built_in">declare</span> SHORT_TIME_FORMAT=<span class="string">"+%H-%M-%S-%N"</span></div><div class="line"><span class="built_in">declare</span> TIMESTAMP=`date <span class="string">""</span><span class="variable">$&#123;FULL_TIME_FORMAT&#125;</span><span class="string">""</span> `</div><div class="line"><span class="built_in">declare</span> RESULT_DIRECTORY=<span class="variable">$&#123;SNAPSHOT_BASE_DIRECTORY&#125;</span>/<span class="variable">$&#123;PID&#125;</span>/<span class="variable">$&#123;TIMESTAMP&#125;</span></div><div class="line"><span class="built_in">declare</span> RUN_LOG_PATH=<span class="string">"<span class="variable">$&#123;RESULT_DIRECTORY&#125;</span>/run.log"</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">run_log</span></span>()&#123;</div><div class="line">    <span class="built_in">declare</span> log_msg=<span class="string">"<span class="variable">$(date ""$&#123;FULL_TIME_FORMAT&#125;"")</span>: <span class="variable">$1</span>"</span></div><div class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;log_msg&#125;</span></div><div class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;log_msg&#125;</span> &gt;&gt;<span class="variable">$&#123;RUN_LOG_PATH&#125;</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">is_no_null</span></span>()&#123;</div><div class="line">    <span class="keyword">if</span> [ -z <span class="variable">$1</span> ];<span class="keyword">then</span></div><div class="line"><span class="built_in">return</span> 0;</div><div class="line">    <span class="keyword">else</span></div><div class="line"><span class="built_in">return</span> 1;</div><div class="line">    <span class="keyword">fi</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">is_valid_number</span></span>()&#123;</div><div class="line">    is_no_null <span class="variable">$1</span></div><div class="line">    <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></div><div class="line"><span class="built_in">return</span> 0;</div><div class="line">    <span class="keyword">fi</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> [ <span class="variable">$1</span> -gt 0 ] 2&gt;/dev/null ;<span class="keyword">then</span></div><div class="line"><span class="built_in">return</span> 1;</div><div class="line">    <span class="keyword">else</span></div><div class="line"><span class="built_in">return</span> 0;</div><div class="line">    <span class="keyword">fi</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">echo_blank_line</span></span>()&#123;</div><div class="line">    <span class="built_in">echo</span> </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">valid_param</span></span>()&#123;</div><div class="line">    <span class="keyword">if</span> [ ! -d <span class="variable">$&#123;RESULT_DIRECTORY&#125;</span> ]; <span class="keyword">then</span></div><div class="line">mkdir -p <span class="variable">$&#123;RESULT_DIRECTORY&#125;</span></div><div class="line">run_log <span class="string">"tip: Create RESULT_DIRECTORY=<span class="variable">$&#123;RESULT_DIRECTORY&#125;</span>"</span></div><div class="line">    <span class="keyword">fi</span></div><div class="line">    run_log <span class="string">"tip: RESULT_DIRECTORY=<span class="variable">$&#123;RESULT_DIRECTORY&#125;</span>"</span></div><div class="line"></div><div class="line">    is_no_null <span class="variable">$&#123;SNAPSHOT_BASE_DIRECTORY&#125;</span></div><div class="line">    <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></div><div class="line">run_log <span class="string">"Param 1 SNAPSHOT_BASE_DIRECTORY is no exist and exit ,such as /tmp/dump"</span></div><div class="line"><span class="built_in">exit</span> 1;</div><div class="line">    <span class="keyword">else</span></div><div class="line">run_log <span class="string">"tip: SNAPSHOT_BASE_DIRECTORY=<span class="variable">$&#123;SNAPSHOT_BASE_DIRECTORY&#125;</span>"</span></div><div class="line">    <span class="keyword">fi</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> [ -d <span class="string">"<span class="variable">$&#123;JAVA_HOME&#125;</span>"</span> ];<span class="keyword">then</span></div><div class="line">run_log <span class="string">"tip: JAVA HOME: <span class="variable">$&#123;JAVA_HOME&#125;</span>"</span></div><div class="line">    <span class="keyword">else</span></div><div class="line">run_log <span class="string">"Param2 JAVA_HOME is no exist and exit ,such as /usr/local/java/jdk1.8.0_05"</span></div><div class="line"><span class="built_in">exit</span> 2;</div><div class="line">    <span class="keyword">fi</span></div><div class="line"></div><div class="line">    is_valid_number <span class="variable">$&#123;PID&#125;</span></div><div class="line">    <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></div><div class="line">run_log <span class="string">"Param3 PID is invalid and exit"</span></div><div class="line"><span class="built_in">exit</span> 3;</div><div class="line">    <span class="keyword">fi</span></div><div class="line">&#125;</div><div class="line">valid_param</div><div class="line">run_log <span class="string">"RESULT_DIRECTORY=<span class="variable">$&#123;RESULT_DIRECTORY&#125;</span>"</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">machine_dump</span></span>()&#123;</div><div class="line">    <span class="built_in">declare</span> filename=<span class="variable">$1</span>;</div><div class="line"></div><div class="line">    <span class="built_in">type</span> <span class="variable">$1</span> &gt;/dev/null 2&gt;&amp;1 &amp;&amp; &#123;</div><div class="line">    run_log <span class="string">"Start <span class="variable">$1</span> <span class="variable">$2</span> dump"</span></div><div class="line">    <span class="built_in">declare</span> timestamp=$(date <span class="string">""</span><span class="variable">$&#123;SHORT_TIME_FORMAT&#125;</span><span class="string">""</span>);</div><div class="line">    run_log <span class="string">"Execute <span class="variable">$1</span> <span class="variable">$2</span> &gt;&gt; <span class="variable">$&#123;RESULT_DIRECTORY&#125;</span>/machine_<span class="variable">$&#123;filename&#125;</span>_<span class="variable">$&#123;timestamp&#125;</span>.dump"</span></div><div class="line">    <span class="variable">$1</span> <span class="variable">$2</span> &gt;&gt; <span class="variable">$&#123;RESULT_DIRECTORY&#125;</span>/machine_<span class="variable">$&#123;filename&#125;</span>_<span class="variable">$&#123;timestamp&#125;</span>.dump</div><div class="line">    run_log <span class="string">"End <span class="variable">$1</span> <span class="variable">$2</span> dump"</span></div><div class="line">echo_blank_line</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">machine_dump_pipeline</span></span>()&#123;</div><div class="line">    <span class="built_in">declare</span> filename=<span class="variable">$1</span>;</div><div class="line"></div><div class="line">    <span class="built_in">type</span> <span class="variable">$2</span> &gt;/dev/null 2&gt;&amp;1 &amp;&amp; &#123;</div><div class="line">run_log <span class="string">"Start <span class="variable">$2</span> <span class="variable">$3</span> | <span class="variable">$4</span> dump"</span></div><div class="line"><span class="built_in">declare</span> timestamp=$(date <span class="string">""</span><span class="variable">$&#123;SHORT_TIME_FORMAT&#125;</span><span class="string">""</span>);</div><div class="line">run_log <span class="string">"Execute <span class="variable">$2</span> <span class="variable">$3</span> | <span class="variable">$4</span> &gt;&gt; <span class="variable">$&#123;RESULT_DIRECTORY&#125;</span>/machine_<span class="variable">$&#123;filename&#125;</span>_<span class="variable">$&#123;timestamp&#125;</span>.dump"</span></div><div class="line"><span class="variable">$2</span> <span class="variable">$3</span> | <span class="variable">$4</span> &gt;&gt; <span class="variable">$&#123;RESULT_DIRECTORY&#125;</span>/machine_<span class="variable">$&#123;filename&#125;</span>_<span class="variable">$&#123;timestamp&#125;</span>.dump</div><div class="line">    run_log <span class="string">"End <span class="variable">$2</span> <span class="variable">$3</span> | <span class="variable">$4</span> dump"</span></div><div class="line">echo_blank_line</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 3 times interval 1s</span></div><div class="line"><span class="built_in">declare</span> machine_static_frequency=<span class="string">"1 3"</span></div><div class="line"></div><div class="line"><span class="comment"># machine real time statistics information</span></div><div class="line">echo_blank_line</div><div class="line">machine_dump_pipeline <span class="string">"top-50-process"</span> top <span class="string">"-b"</span> <span class="string">"head -n 50"</span> </div><div class="line">machine_dump free -glt</div><div class="line">machine_dump vmstat <span class="string">"-t <span class="variable">$&#123;machine_static_frequency&#125;</span>"</span></div><div class="line">machine_dump mpstat <span class="string">"-A <span class="variable">$&#123;machine_static_frequency&#125;</span>"</span></div><div class="line">machine_dump iostat <span class="string">"<span class="variable">$&#123;machine_static_frequency&#125;</span>"</span></div><div class="line">machine_dump iotop <span class="string">"-o -b -n 3"</span></div><div class="line">machine_dump netstat <span class="string">"-an"</span></div><div class="line">machine_dump lsof <span class="string">"-p <span class="variable">$&#123;PID&#125;</span>"</span></div><div class="line"><span class="comment"># machine history statistics information</span></div><div class="line">machine_dump sar -A</div><div class="line"></div><div class="line"><span class="function"><span class="title">get_pid_user</span></span>()&#123;</div><div class="line">    user_tip=`ps u -p <span class="variable">$1</span> | tail -n 1 | awk <span class="string">'&#123;print $1&#125;'</span>`</div><div class="line">    is_valid_number <span class="variable">$&#123;user_tip&#125;</span></div><div class="line">    <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;user_tip&#125;</span></div><div class="line">    <span class="keyword">else</span></div><div class="line"><span class="built_in">echo</span> `cat /etc/passwd |grep x:<span class="variable">$&#123;user_tip&#125;</span> | awk -F <span class="string">':'</span> <span class="string">'&#123;print $1&#125;'</span>`</div><div class="line">    <span class="keyword">fi</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">PID_USER=`get_pid_user <span class="variable">$&#123;PID&#125;</span>`</div><div class="line"></div><div class="line"><span class="function"><span class="title">jvm_dump</span></span>()&#123;</div><div class="line">    <span class="built_in">declare</span> filename;</div><div class="line">    <span class="keyword">if</span> [ ! -z <span class="variable">$3</span> ];<span class="keyword">then</span></div><div class="line">filename=<span class="variable">$3</span></div><div class="line">    <span class="keyword">else</span></div><div class="line">filename=<span class="variable">$1</span></div><div class="line">    <span class="keyword">fi</span></div><div class="line">    run_log <span class="string">"Start <span class="variable">$1</span> <span class="variable">$2</span> dump"</span></div><div class="line">    <span class="built_in">declare</span> timestamp=$(date <span class="string">""</span><span class="variable">$&#123;SHORT_TIME_FORMAT&#125;</span><span class="string">""</span>);</div><div class="line">    run_log <span class="string">"su -l <span class="variable">$&#123;PID_USER&#125;</span> -s /bin/bash -c \"<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin/<span class="variable">$1</span> <span class="variable">$2</span> \" &gt;&gt;  <span class="variable">$&#123;RESULT_DIRECTORY&#125;</span>/jvm_<span class="variable">$&#123;filename&#125;</span>_<span class="variable">$&#123;timestamp&#125;</span>.dump"</span></div><div class="line">    su -l <span class="variable">$&#123;PID_USER&#125;</span> -s /bin/bash -c <span class="string">"<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin/<span class="variable">$1</span> <span class="variable">$2</span> "</span> &gt;&gt; <span class="variable">$&#123;RESULT_DIRECTORY&#125;</span>/jvm_<span class="variable">$&#123;filename&#125;</span>_<span class="variable">$&#123;timestamp&#125;</span>.dump</div><div class="line">    run_log <span class="string">"End <span class="variable">$1</span> <span class="variable">$2</span> dump"</span></div><div class="line">    echo_blank_line</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 8 times interval 1s</span></div><div class="line"><span class="built_in">declare</span> jvm_static_frequency=<span class="string">"1000 8"</span></div><div class="line"><span class="comment"># jvm real time statistics information</span></div><div class="line">jvm_dump jinfo <span class="string">"<span class="variable">$&#123;PID&#125;</span>"</span></div><div class="line">jvm_dump jstat <span class="string">"-gcutil <span class="variable">$&#123;PID&#125;</span> <span class="variable">$&#123;jvm_static_frequency&#125;</span>"</span> <span class="string">"jstat-gcutil"</span></div><div class="line"></div><div class="line">machine_dump_pipeline <span class="string">"top-100-high-thread"</span> top <span class="string">"-H -b -n 1 -p  <span class="variable">$&#123;PID&#125;</span>"</span> <span class="string">"head -n 100"</span></div><div class="line">chown <span class="variable">$&#123;PID_USER&#125;</span>:<span class="variable">$&#123;PID_USER&#125;</span> <span class="variable">$&#123;RESULT_DIRECTORY&#125;</span></div><div class="line"><span class="comment"># topH have must together with jstack</span></div><div class="line">jvm_dump jstack <span class="string">"<span class="variable">$&#123;JVM_FORCE_OPTS&#125;</span> <span class="variable">$&#123;PID&#125;</span>"</span></div><div class="line"></div><div class="line"><span class="comment"># dump </span></div><div class="line"><span class="function"><span class="title">jvm_head_dump</span></span>()&#123;</div><div class="line">    run_log <span class="string">"Start jmap  <span class="variable">$1</span> dump"</span></div><div class="line">    <span class="built_in">declare</span> timestamp=$(date <span class="string">""</span><span class="variable">$&#123;SHORT_TIME_FORMAT&#125;</span><span class="string">""</span>);</div><div class="line">    run_log <span class="string">"su -l <span class="variable">$&#123;PID_USER&#125;</span> -s /bin/bash -c \"<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin/jmap <span class="variable">$&#123;JVM_FORCE_OPTS&#125;</span> -dump:format=b,file=<span class="variable">$&#123;RESULT_DIRECTORY&#125;</span>/jvm_jmap_<span class="variable">$&#123;timestamp&#125;</span>.hprof <span class="variable">$1</span>\""</span></div><div class="line">    <span class="comment">#su -l $&#123;PID_USER&#125; -s /bin/bash -c "$&#123;JAVA_HOME&#125;/bin/jmap $&#123;JVM_FORCE_OPTS&#125; -dump:format=b,file=$&#123;RESULT_DIRECTORY&#125;/jvm_jmap_$&#123;timestamp&#125;.hprof $1" </span></div><div class="line">    <span class="variable">$&#123;JAVA_HOME&#125;</span>/bin/jmap <span class="variable">$&#123;JVM_FORCE_OPTS&#125;</span> -dump:format=b,file=<span class="variable">$&#123;RESULT_DIRECTORY&#125;</span>/jvm_jmap_<span class="variable">$&#123;timestamp&#125;</span>.hprof <span class="variable">$1</span></div><div class="line">    run_log <span class="string">"End jmap <span class="variable">$1</span> dump"</span></div><div class="line">    echo_blank_line</div><div class="line">&#125;</div><div class="line">jvm_head_dump <span class="variable">$&#123;PID&#125;</span></div><div class="line"></div><div class="line"><span class="comment"># statistics all kinds of tcp status</span></div><div class="line">cat <span class="variable">$&#123;RESULT_DIRECTORY&#125;</span>/machine_netstat*.dump | awk <span class="string">'/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;'</span> &gt; <span class="variable">$&#123;RESULT_DIRECTORY&#125;</span>/machine_netstat_status_statistics.dump</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;linux-dump工具&quot;&gt;&lt;a href=&quot;#linux-dump工具&quot; class=&quot;headerlink&quot; title=&quot;linux dump工具&quot;&gt;&lt;/a&gt;linux dump工具&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;t
      
    
    </summary>
    
      <category term="linux" scheme="http://www.lilhui.com/categories/linux/"/>
    
    
      <category term="dump" scheme="http://www.lilhui.com/tags/dump/"/>
    
  </entry>
  
  <entry>
    <title>结果导向</title>
    <link href="http://www.lilhui.com/2019/06/13/article/teammanager/teammanager_1/"/>
    <id>http://www.lilhui.com/2019/06/13/article/teammanager/teammanager_1/</id>
    <published>2019-06-13T06:24:58.000Z</published>
    <updated>2019-06-13T06:33:54.426Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是结果导向"><a href="#什么是结果导向" class="headerlink" title="什么是结果导向"></a>什么是结果导向</h1><blockquote><p>结果导向是质量管理体系、绩效管理理论中的基本概念核心思想之一。强调工作的结果。<br>这里记录另外一种思考。称之为结果导向在过程中的作用和价值。</p></blockquote><h1 id="结果导向在过程中的作用和价值"><a href="#结果导向在过程中的作用和价值" class="headerlink" title="结果导向在过程中的作用和价值"></a>结果导向在过程中的作用和价值</h1><p>结果导向，字面上意思是注重结果。实际在执行工作过程中体现的是恰恰是过程中的重要性。<br>在过程中强调结果导向，其目的是强调在工作过程中朝着最终的结果靠拢。随着工作过程的推进，<br>这个路径慢慢向结果收敛靠近。它可以作为纠正工作中偏离最终设定结果的工具。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;什么是结果导向&quot;&gt;&lt;a href=&quot;#什么是结果导向&quot; class=&quot;headerlink&quot; title=&quot;什么是结果导向&quot;&gt;&lt;/a&gt;什么是结果导向&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;结果导向是质量管理体系、绩效管理理论中的基本概念核心思想之一。强调工作的结
      
    
    </summary>
    
      <category term="技术之外" scheme="http://www.lilhui.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/"/>
    
    
      <category term="管理" scheme="http://www.lilhui.com/tags/%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>【更好的工作 tips3】敏捷开发原则</title>
    <link href="http://www.lilhui.com/2019/06/12/article/worker/worker_2/"/>
    <id>http://www.lilhui.com/2019/06/12/article/worker/worker_2/</id>
    <published>2019-06-12T09:26:19.000Z</published>
    <updated>2019-06-12T09:33:07.605Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>敏捷开发的核心目的是利用有限技术资源，实现软件开发的效能的最大化。一些原则或者方法贯穿<br>着敏捷开发的整个过程。</p></blockquote><p>#原则</p><ul><li><p>简单</p></li><li><p>拥抱变化</p></li><li><p>可持续性</p></li><li><p>递增</p></li><li><p>资源最大化</p></li><li><p>有目的地建模</p></li><li><p>多种模型</p></li><li><p>高质量的工作</p></li><li><p>快速反馈</p></li><li><p>主要目标-软件</p></li><li><p>轻量前行</p></li></ul><h1 id="成功的结果"><a href="#成功的结果" class="headerlink" title="成功的结果"></a>成功的结果</h1><ul><li><p>随机应变</p></li><li><p>自主权</p></li><li><p>分享经验</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;敏捷开发的核心目的是利用有限技术资源，实现软件开发的效能的最大化。一些原则或者方法贯穿&lt;br&gt;着敏捷开发的整个过程
      
    
    </summary>
    
      <category term="工作" scheme="http://www.lilhui.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="敏捷开发" scheme="http://www.lilhui.com/tags/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>【更好工作的 tips1】临时工作的安排</title>
    <link href="http://www.lilhui.com/2019/06/11/article/worker/worker_0/"/>
    <id>http://www.lilhui.com/2019/06/11/article/worker/worker_0/</id>
    <published>2019-06-11T07:36:06.000Z</published>
    <updated>2019-06-12T09:33:07.601Z</updated>
    
    <content type="html"><![CDATA[<ul><li>临时工作的安排</li></ul><p>口头，或者会议结论提出的临时工作任务。在安排好手上的工作后，立即着手对临时达成<br>协议内容进行安排，花五分钟时间进行记录和规划，上报。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;临时工作的安排&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;口头，或者会议结论提出的临时工作任务。在安排好手上的工作后，立即着手对临时达成&lt;br&gt;协议内容进行安排，花五分钟时间进行记录和规划，上报。&lt;/p&gt;

      
    
    </summary>
    
      <category term="工作" scheme="http://www.lilhui.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="随想" scheme="http://www.lilhui.com/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>【更好工作的 tips2】会议的要点</title>
    <link href="http://www.lilhui.com/2019/06/11/article/worker/worker_1/"/>
    <id>http://www.lilhui.com/2019/06/11/article/worker/worker_1/</id>
    <published>2019-06-11T07:36:06.000Z</published>
    <updated>2019-06-12T09:33:07.595Z</updated>
    
    <content type="html"><![CDATA[<ul><li>会议的要点</li></ul><p>会议或大，或小，或长或短，目的要明确。要明确要解决的问题、确认的问题、达成的共<br>识等。当会议快结束时候确认会议达成的共识或者解决问题的方案，分配相应的任务。<br>特别是技术类、需求类会议。最终都需要达成一个超目标迈进的可执行方案。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;会议的要点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;会议或大，或小，或长或短，目的要明确。要明确要解决的问题、确认的问题、达成的共&lt;br&gt;识等。当会议快结束时候确认会议达成的共识或者解决问题的方案，分配相应的任务。&lt;br&gt;特别是技术类、需求类会议。最终都需要达成一个超目标迈
      
    
    </summary>
    
      <category term="工作" scheme="http://www.lilhui.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="随想" scheme="http://www.lilhui.com/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>文档编写的过程</title>
    <link href="http://www.lilhui.com/2019/06/11/article/word/word_0/"/>
    <id>http://www.lilhui.com/2019/06/11/article/word/word_0/</id>
    <published>2019-06-11T07:26:32.000Z</published>
    <updated>2019-06-11T08:08:53.865Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>一个好的软件工程师在工作的过程中，不仅仅要求编写计算机高效运行的代码，更需要<br>能够将自己所做工作完美呈现出来的文档能力。</p></blockquote><h1 id="重要性"><a href="#重要性" class="headerlink" title="重要性"></a>重要性</h1><h1 id="思维过程"><a href="#思维过程" class="headerlink" title="思维过程"></a>思维过程</h1><p>零碎的思维碎片-&gt;初始文档-&gt;汇报文件(ppt等)<br>以上，从0开始的文档整理过程都是这样过来。首先开始思考有了零碎的思维碎片，此时可<br>能还不能完整的串联起来，但是不要紧，思维碎片完成后。从中提取完整的脉络简单的<br>可以从时间维度、业务发展维度等进行提取。在大概一天的提取后可以大概完成一个具象化<br>的初始文档，初始文档比较粗糙，需要进行润色，加素材。这个过程一般经过一到两天<br>润色或者素材完成后，已经是一份对自己来说完成度较高的文档了。此时如果不需要进行<br>汇报或者演讲，可以直接封板。如果需要汇报或者培训演讲，就需要在此基础上进行提炼<br>提炼更精炼的数据汇总成PPT。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;一个好的软件工程师在工作的过程中，不仅仅要求编写计算机高效运行的代码，更需要&lt;br&gt;能够将自己所做工作完美呈现出来
      
    
    </summary>
    
      <category term="技术之外" scheme="http://www.lilhui.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/"/>
    
    
      <category term="文档能力" scheme="http://www.lilhui.com/tags/%E6%96%87%E6%A1%A3%E8%83%BD%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>awk基础</title>
    <link href="http://www.lilhui.com/2019/06/05/linux/linux_5/"/>
    <id>http://www.lilhui.com/2019/06/05/linux/linux_5/</id>
    <published>2019-06-05T02:16:42.000Z</published>
    <updated>2019-06-10T09:40:38.088Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>awk是由Alfred Aho, Peter Weinberger和 Brian Kernighan三人创造的，wak由三人的姓氏的首个字母组成<br>早期是在unix上实现的。在unix上的叫gawk既GNU awk</p></blockquote><h1 id="awk语法"><a href="#awk语法" class="headerlink" title="awk语法"></a>awk语法</h1><ul><li>awk命令形式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">awk [-F|-f|-v] <span class="string">'BEGIN&#123;&#125;//&#123;command1;command2&#125;END&#123;&#125;'</span> file</div></pre></td></tr></table></figure><ul><li>命令解释</li></ul><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>[-F &#124; -f &#124; -v]</td><td>-F指定分隔符，f调用脚本，-v 定义变量， var=value</td></tr><tr><td>‘ ‘</td><td>引用代码块</td></tr><tr><td>BEGIN</td><td>初始代码块，在对每一行进行处理之前，初始化代码，主要是引用全局变量，设置FS分隔符</td></tr><tr><td>//</td><td>匹配代码块。可以是字符串或正则表达式</td></tr><tr><td>{}</td><td>命令代码块。包含一条或者多条命令，多条命令用分号分隔</td></tr><tr><td>END</td><td>结尾代码块。在对每一行进行处理之后再执行的代码块，主要是进行最终计算或输出结尾摘要信息</td></tr></tbody></table><ul><li>awk内置变量</li></ul><table><thead><tr><th>变量名</th><th>解释</th><th>例子</th></tr></thead><tbody><tr><td>FILENAME</td><td>awk浏览的文件名</td><td></td></tr><tr><td>FNR</td><td>与NR类似，多文件记录不递增，每个文件都从1开始</td><td></td></tr><tr><td>FS</td><td>设置输入字段分隔符，同-F选项</td><td></td></tr><tr><td>NF</td><td>浏览记录的字段个数</td><td>awk ‘{print NF}’ file  //显示每行有多少字段</td></tr><tr><td>$NF</td><td>最后一个字段的值</td><td>awk ‘{print $NF}’ file    //将每行第NF个字段的值打印出来</td></tr><tr><td>NR</td><td>已读的记录数，理解为行号，多文件行号递增</td><td>awk ‘NR==5{print}’  file    //显示第5行</td></tr><tr><td>OFS</td><td>输出数据时，每个字段间以OFS制定的字符作为分隔符</td><td>awk ‘{print $3,$5,$4}’ OFS=”\n” file</td></tr><tr><td>ORS</td><td>输出数据时，每行记录间以OFS制定的字符作为分羹</td><td>awk ‘{print $3,$5,$4}’ ORS=”\n” file</td></tr></tbody></table><h1 id="awk的大参数"><a href="#awk的大参数" class="headerlink" title="awk的大参数"></a>awk的大参数</h1><ul><li><p>参数模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">awk [-F|-f|-v] <span class="string">'BEGIN&#123;&#125; // &#123;command1; command2&#125; END&#123;&#125;'</span> file</div></pre></td></tr></table></figure></li><li><p>-F制定分隔符</p></li></ul><blockquote><p>可以不写，默认用空格。一个或多个连续的空格看做一个分隔符，也可以定义多个分隔符，<br>如果： -F[./]是指，同时以 “.”和”/“作为分隔符。</p></blockquote><ul><li>-f与 -v</li></ul><p>略</p><h1 id="awky的引用代码块"><a href="#awky的引用代码块" class="headerlink" title="awky的引用代码块"></a>awky的引用代码块</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">awk [-F|-f|-v] ‘BEGIN&#123;&#125; // &#123;command1; command2&#125; END&#123;&#125;’ file</div></pre></td></tr></table></figure><ul><li>操作符</li></ul><p>引用代码块是一个编程环境，支持条件运算，逻辑运算等。</p><table><thead><tr><th>符号</th><th>解释</th><th>实例</th></tr></thead><tbody><tr><td>==</td><td>等于，精确比较</td><td>awk ‘$3==”48” {print $0}’ file    只打印第3个字段等于”48”的记录</td></tr><tr><td>!=</td><td>不等于，精确比较</td><td>awk ‘$1 != “abc”‘ file    //提取第一个字段不是abc的行</td></tr><tr><td>~</td><td>匹配，与==相比不是精确比较</td><td>awk ‘{if ($4~/abc/) print $0}’ file    //表示如果第四个字段包含abc，就打印整行</td></tr><tr><td>!~</td><td>不匹配，不精确比较</td><td>awk ‘$0 !~ /abc/‘ file      打印整条不包含abc的记录</td></tr><tr><td>&amp;&amp;</td><td>和</td><td>awk ‘{if ( $1==”a” &amp;&amp; $2==”b” ) print $0}’ file    //如果第1、第2个字段值是a和b，打印整行</td></tr><tr><td>&#124;&#124;</td><td>或</td><td>awk ‘{if ($1==”a” &#124;&#124; $1==”b”) print $0}’ temp    //如果第1、第2个字段值是a或b，打印整行</td></tr><tr><td>></td><td>大于</td><td>awk ‘$1&gt;500 {print $2}’ file     //如果字段1的值大于500，则打印字段2</td></tr><tr><td>>=</td><td>大于等于</td><td>awk ‘$1&gt;=400 {print $2}’ file     //如果字段1的值大于等于400，则打印字段2</td></tr><tr><td>\&lt;</td><td>小于</td><td>awk ‘$1&lt;200 {print $2}’ file     //如果字段1的值小于200，则打印字段2</td></tr><tr><td>\&lt;=</td><td>小于等于</td><td>awk ‘$1&lt;=100 {print $2}’ file     //如果字段1的值小于等于100，则打印字段2</td></tr><tr><td>+</td><td>加</td><td>awk ‘{print $3+10}’ file    //字段3数值加10</td></tr><tr><td>-</td><td>减</td><td>awk ‘{print $3-10}’ file    //字段3数值减10</td></tr><tr><td>*</td><td>乘</td><td>awk ‘{print $3*10}’ file    //字段3数值乘10</td></tr><tr><td>\/</td><td>除</td><td>awk ‘{print $3/10}’ file    //字段3数值除10</td></tr></tbody></table><ul><li>字符匹配代码块</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">awk [-F|-f|-v] ‘BEGIN&#123;&#125; // &#123;command1; command2&#125; END&#123;&#125;’ file</div></pre></td></tr></table></figure><ol><li>字符匹配代码支持针对字符串的操作</li></ol><ol><li>字符匹配代码块支持正则表达式</li></ol><ul><li>if语句</li></ul><ol><li>必须在{}里，且比较内容用()扩起来，支持if else</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">awk -F: <span class="string">'&#123;if($1~/abc/) print $1&#125;'</span> file     //简写</div><div class="line"></div><div class="line">awk -F: <span class="string">'&#123;if($1~/abc/) &#123;print $1&#125;&#125;'</span>  file    //全写</div><div class="line"></div><div class="line">awk -F: <span class="string">'&#123;if($1~/abc/) &#123;print $1&#125; else &#123;print $2&#125;&#125;'</span> file    //if...else...</div></pre></td></tr></table></figure><ol><li>有时不用if语句也可以实现同样的效果图，如<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">awk -F: <span class="string">'&#123;if($1~/abc/) &#123;print $1&#125;&#125;'</span> file    //<span class="variable">$1</span>为指定内容才显示</div><div class="line"></div><div class="line">awk -F: <span class="string">'$1~/abc/ &#123;print $1&#125;'</span> file    //与上面相同效果，没有用<span class="keyword">if</span>语句，条件写在‘’外</div></pre></td></tr></table></figure></li></ol><ul><li>while语句</li></ul><blockquote><p>与其他语言的while语句类似，条件为True时执行循环语句，False时不执行。</p></blockquote><ul><li>数组</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">netstat -anp|awk <span class="string">'NR!=1&#123;a[$6]++&#125; END&#123;for (i in a) print i,"\t",a[i]&#125;'</span></div><div class="line"></div><div class="line">netstat -anp|awk <span class="string">'NR!=1&#123;a[$6]++&#125; END&#123;for (i in a) printf "%-20s %-10s %-5s \n", i,"\t",a[i]&#125;'</span></div></pre></td></tr></table></figure><h1 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h1><ol><li>指定输出  </li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">awk -F: <span class="string">'&#123;print NF&#125;'</span> helloworld.sh                                                       //输出文件每行有多少字段</div><div class="line"></div><div class="line">awk -F: <span class="string">'&#123;print $1,$2,$3,$4,$5&#125;'</span> helloworld.sh                                 //输出前5个字段</div><div class="line"></div><div class="line">awk -F: <span class="string">'&#123;print $1,$2,$3,$4,$5&#125;'</span> OFS=<span class="string">'\t'</span> helloworld.sh                 //输出前5个字段并使用制表符分隔输出</div><div class="line"></div><div class="line">awk -F: <span class="string">'&#123;print NR,$1,$2,$3,$4,$5&#125;'</span> OFS=<span class="string">'\t'</span> helloworld.sh           //制表符分隔输出前5个字段，并打印行号</div></pre></td></tr></table></figure><ol><li>指定分隔符并且输出  </li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">awk -F<span class="string">'[:#]'</span> <span class="string">'&#123;print NF&#125;'</span>  helloworld.sh                                                  //指定多个分隔符: <span class="comment">#，输出每行多少字段</span></div><div class="line"></div><div class="line">awk -F<span class="string">'[:#]'</span> <span class="string">'&#123;print $1,$2,$3,$4,$5,$6,$7&#125;'</span> OFS=<span class="string">'\t'</span> helloworld.sh   //制表符分隔输出多字段</div><div class="line"></div><div class="line">awk -F<span class="string">'[:#/]'</span> <span class="string">'&#123;print NF&#125;'</span> helloworld.sh                                               //指定三个分隔符，并输出每行字段数</div><div class="line"></div><div class="line">awk -F<span class="string">'[:#/]'</span> <span class="string">'&#123;print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12&#125;'</span> helloworld.sh     //制表符分隔输出多字段</div></pre></td></tr></table></figure><ol><li>简单计算  </li></ol><p>计算/home目录下，普通文件的大小，使用KB作为单位</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ls -l|awk <span class="string">'BEGIN&#123;sum=0&#125; !/^d/&#123;sum+=$5&#125; END&#123;print "total size is:",sum/1024,"KB"&#125;'</span></div><div class="line"></div><div class="line">ls -l|awk <span class="string">'BEGIN&#123;sum=0&#125; !/^d/&#123;sum+=$5&#125; END&#123;print "total size is:",int(sum/1024),"KB"&#125;'</span>         //int是取整的意思</div></pre></td></tr></table></figure><ol><li>统计  </li></ol><p>统计netstat -anp 状态为LISTEN和CONNECT的连接数量分别是多少</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -anp|awk <span class="string">'$6~/LISTEN|CONNECTED/&#123;sum[$6]++&#125; END&#123;for (i in sum) printf "%-10s %-6s %-3s \n", i," ",sum[i]&#125;'</span></div></pre></td></tr></table></figure><p>统计/home目录下不同用户的普通文件的总数是多少？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -anp|awk <span class="string">'$6~/LISTEN|CONNECTED/&#123;sum[$6]++&#125; END&#123;for (i in sum) printf "%-10s %-6s %-3s \n", i," ",sum[i]&#125;'</span></div></pre></td></tr></table></figure><p>统计/home目录下不同用户的普通文件的总数是多少？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls -l|awk <span class="string">'NR!=1 &amp;&amp; !/^d/&#123;sum[$3]++&#125; END&#123;for (i in sum) printf "%-6s %-5s %-3s \n",i," ",sum[i]&#125;'</span></div></pre></td></tr></table></figure><p>统计/home目录下不同用户的普通文件的大小总size是多少？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls -l|awk <span class="string">'NR!=1 &amp;&amp; !/^d/&#123;sum[$3]+=$5&#125; END&#123;for (i in sum) printf "%-6s %-5s %-3s %-2s \n",i," ",sum[i]/1024/1024,"MB"&#125;'</span></div></pre></td></tr></table></figure><ol><li>复杂表格输出  </li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">awk <span class="string">'BEGIN&#123;math=0;eng=0;com=0;printf "Lineno.   Name    No.    Math   English   Computer    Total\n";printf "------------------------------------------------------------\n"&#125;&#123;math+=$3; eng+=$4; com+=$5;printf "%-8s %-7s %-7s %-7s %-9s %-10s %-7s \n",NR,$1,$2,$3,$4,$5,$3+$4+$5&#125; END&#123;printf "------------------------------------------------------------\n";printf "%-24s %-7s %-9s %-20s \n","Total:",math,eng,com;printf "%-24s %-7s %-9s %-20s \n","Avg:",math/NR,eng/NR,com/NR&#125;'</span> test0</div><div class="line"></div><div class="line">cat test0  </div><div class="line"></div><div class="line">Marry   2143 78 84 77</div><div class="line"></div><div class="line">Jack    2321 66 78 45</div><div class="line"></div><div class="line">Tom     2122 48 77 71</div><div class="line"></div><div class="line">Mike    2537 87 97 95</div><div class="line"></div><div class="line">Bob     2415 40 57 62</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;awk是由Alfred Aho, Peter Weinberger和 Brian Kernighan三人创造的，w
      
    
    </summary>
    
      <category term="linux" scheme="http://www.lilhui.com/categories/linux/"/>
    
    
      <category term="awk" scheme="http://www.lilhui.com/tags/awk/"/>
    
  </entry>
  
  <entry>
    <title>【代码审查系列8】阿里巴巴编码规范</title>
    <link href="http://www.lilhui.com/2019/06/04/article/codereview/article_8/"/>
    <id>http://www.lilhui.com/2019/06/04/article/codereview/article_8/</id>
    <published>2019-06-04T03:34:37.000Z</published>
    <updated>2019-06-04T03:46:17.071Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="http://note.youdao.com/noteshare?id=96f4bf961d3ded69d6af43bc183361fb" target="_blank" rel="external">阿里巴巴编码规范详情</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://note.youdao.com/noteshare?id=96f4bf961d3ded69d6af43bc183361fb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阿里巴巴编码规范详情&lt;/a&gt;&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="技术之外" scheme="http://www.lilhui.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/"/>
    
    
      <category term="代码审查" scheme="http://www.lilhui.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5/"/>
    
      <category term="CODEREVIEW" scheme="http://www.lilhui.com/tags/CODEREVIEW/"/>
    
  </entry>
  
  <entry>
    <title>【代码审查系列7】如何做人性化的代码审查</title>
    <link href="http://www.lilhui.com/2019/06/04/article/codereview/article_7/"/>
    <id>http://www.lilhui.com/2019/06/04/article/codereview/article_7/</id>
    <published>2019-06-04T03:28:51.000Z</published>
    <updated>2019-06-04T03:46:17.087Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://note.youdao.com/ynoteshare1/index.html?id=ce984049ed01f2c177de0e3d6d0dfbfb&amp;type=note" target="_blank" rel="external">如何做人性化的代码审查详情</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://note.youdao.com/ynoteshare1/index.html?id=ce984049ed01f2c177de0e3d6d0dfbfb&amp;amp;type=note&quot; target=&quot;_blank&quot; rel=&quot;ext
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【代码审查系列6】GIT修改注释模板方式</title>
    <link href="http://www.lilhui.com/2019/06/04/article/codereview/article_6/"/>
    <id>http://www.lilhui.com/2019/06/04/article/codereview/article_6/</id>
    <published>2019-06-04T03:28:02.000Z</published>
    <updated>2019-06-04T03:46:17.080Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在使用Git做版本控制工具的团队协助开发中，保证团队成员在提交代码后能够更详尽的追溯源头下。规范代码注释的必要性就得以体现。通过制定这种规范约束，可以显著提高代码提交的目的可追溯性。这里介绍Git修改注释模板方式。</p></blockquote><h2 id="创建过程"><a href="#创建过程" class="headerlink" title="创建过程"></a>创建过程</h2><ol><li><strong>git命令下创建注释模板</strong></li></ol><p>创建 XX_template文件，内容为团队制定的git提交规范例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Desgraption: </div><div class="line">Date: </div><div class="line">Author:</div></pre></td></tr></table></figure><p>通过git config配置commit_template,如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config –-global commit.template /d/develop/Git/Git_Home/commit_template</div></pre></td></tr></table></figure><p>设置git commit时填写注释所用的编辑器，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --global core.editor vim</div></pre></td></tr></table></figure><p>设置后，提交试用git commit</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;在使用Git做版本控制工具的团队协助开发中，保证团队成员在提交代码后能够更详尽的追溯源头下。规范代码注释的必要性就得以体现。通过制定这种规范约束，可以显著提高代码提交的目的可追溯性。这里介绍Git修改注释模板方式。&lt;/p&gt;
&lt;/blockquote
      
    
    </summary>
    
      <category term="技术之外" scheme="http://www.lilhui.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/"/>
    
    
      <category term="代码审查" scheme="http://www.lilhui.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5/"/>
    
      <category term="CODEREVIEW" scheme="http://www.lilhui.com/tags/CODEREVIEW/"/>
    
  </entry>
  
  <entry>
    <title>【代码审查系列5】upsource使用简介</title>
    <link href="http://www.lilhui.com/2019/06/04/article/codereview/article_5/"/>
    <id>http://www.lilhui.com/2019/06/04/article/codereview/article_5/</id>
    <published>2019-06-04T03:27:14.000Z</published>
    <updated>2019-06-04T03:46:17.074Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>upsource使用简介</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;upsource使用简介&lt;/p&gt;
&lt;/blockquote&gt;

      
    
    </summary>
    
      <category term="技术之外" scheme="http://www.lilhui.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/"/>
    
    
      <category term="代码审查" scheme="http://www.lilhui.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5/"/>
    
      <category term="CODEREVIEW" scheme="http://www.lilhui.com/tags/CODEREVIEW/"/>
    
  </entry>
  
  <entry>
    <title>【代码审查系列4】CODE REVIEW 代码审查清单</title>
    <link href="http://www.lilhui.com/2019/06/04/article/codereview/article_4/"/>
    <id>http://www.lilhui.com/2019/06/04/article/codereview/article_4/</id>
    <published>2019-06-04T03:23:11.000Z</published>
    <updated>2019-06-04T03:46:17.061Z</updated>
    
    <content type="html"><![CDATA[<h2 id="整洁的代码"><a href="#整洁的代码" class="headerlink" title="整洁的代码"></a>整洁的代码</h2><table><thead><tr><th>清单项</th><th>分类</th></tr></thead><tbody><tr><td>使用可以表达实际意图的名称</td><td>有意义的名称</td></tr><tr><td>每一个概念只用一个词</td><td>有意义的名称</td></tr><tr><td>使用方案/问题领域名称</td><td>有意义的名称</td></tr><tr><td>类应该是比较小的</td><td>类</td></tr><tr><td>函数应该是比较小的</td><td>函数</td></tr><tr><td>只做一件事</td><td>函数</td></tr><tr><td>DRY(拒绝重复)</td><td>函数</td></tr><tr><td>用代码来注释自己的做法</td><td>注释</td></tr><tr><td>确定应用了代码格式化</td><td>格式</td></tr><tr><td>使用异常而不是返回码</td><td>异常</td></tr><tr><td>不要返回NULL</td><td>异常</td></tr></tbody></table><h2 id="安全性问题"><a href="#安全性问题" class="headerlink" title="安全性问题"></a>安全性问题</h2><table><thead><tr><th>清单项</th><th>分类</th></tr></thead><tbody><tr><td>如果不用继承，使用final类</td><td>基础</td></tr><tr><td>避免重复代码</td><td>基础</td></tr><tr><td>权限限制：程序应该运行在保证功能正常的最小权限模式下</td><td>基础</td></tr><tr><td>最小化类和成员的可访问性</td><td>基础</td></tr><tr><td>注释安全相关的信息</td><td>基础</td></tr><tr><td>系统的输入必须检查是否有效和在允许范围内</td><td>拒绝服务</td></tr><tr><td>避免对于一些不寻常行为的过分日志</td><td>拒绝服务</td></tr><tr><td>在任何情况下都释放资源（流，连接等）</td><td>拒绝服务</td></tr><tr><td>从异常中清楚敏感信息（暴露文件路径，系统内部相关，配置，IP等）</td><td>秘密信息</td></tr><tr><td>不把高敏感度的信息写到日志</td><td>秘密信息</td></tr><tr><td>考虑把高度敏感的信息在使用后从内存中删除</td><td>密码信息</td></tr><tr><td>限制包，类，接口，方法和域的可访问性</td><td>可访问性的扩展</td></tr><tr><td>限制类和方法的可扩展性</td><td>可访问性的扩展</td></tr><tr><td>检验输入（有效数据，大小，范围，边界）</td><td>输入检验</td></tr><tr><td>把从不可信对象得到的输出作为输入来检验</td><td>输入检验</td></tr><tr><td>为native方法定义包装类（而不是定义native方法为public）</td><td>输入检验</td></tr><tr><td>把从不可信对象得到的输出作为输入来对待</td><td>可变性</td></tr><tr><td>使public static域为final（避免调用方法（caller）修改它的值）</td><td>可变性</td></tr><tr><td>避免暴露敏感类的构造函数</td><td>对象构造</td></tr><tr><td>避免安全敏感类的序列化</td><td>序列化反序列化（Serialization Deserialization)</td></tr><tr><td>通过序列化来保护敏感数据</td><td>序列化反序列化</td></tr><tr><td>小心地缓存潜在的特权操作结果</td><td>序列化反序列化</td></tr></tbody></table><h2 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h2><table><thead><tr><th>清单项目</th><th>分类</th></tr></thead><tbody><tr><td>避免过分的同步</td><td>并发</td></tr><tr><td>保持同步于去比较小</td><td>并发</td></tr><tr><td>知道String连接的性能情况</td><td>综合编程</td></tr><tr><td>避免创建不需要的对象</td><td>创建和销毁对象</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;整洁的代码&quot;&gt;&lt;a href=&quot;#整洁的代码&quot; class=&quot;headerlink&quot; title=&quot;整洁的代码&quot;&gt;&lt;/a&gt;整洁的代码&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;清单项&lt;/th&gt;
&lt;th&gt;分类&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

      
    
    </summary>
    
      <category term="技术之外" scheme="http://www.lilhui.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/"/>
    
    
      <category term="代码审查" scheme="http://www.lilhui.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5/"/>
    
      <category term="CODEREVIEW" scheme="http://www.lilhui.com/tags/CODEREVIEW/"/>
    
  </entry>
  
  <entry>
    <title>【代码审查系列3】CODE REVIEW代码审查执行方法</title>
    <link href="http://www.lilhui.com/2019/06/04/article/codereview/article_3/"/>
    <id>http://www.lilhui.com/2019/06/04/article/codereview/article_3/</id>
    <published>2019-06-04T03:21:38.000Z</published>
    <updated>2019-06-10T09:52:18.223Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>建立完善的代码审查机制有助于提升开发团队的协作能力，和提升代码质量。并不是件简单的事情。不同团队所处的公司，项目客观环境不同，所采用的审查流程也不尽相同。本文根据目前公司项目状态和团队人员状况指定简单的可执行方案。希望对开展代码审查机制有帮助。</p></blockquote><h2 id="默认约定"><a href="#默认约定" class="headerlink" title="默认约定"></a>默认约定</h2><h3 id="review方法约定"><a href="#review方法约定" class="headerlink" title="review方法约定"></a>review方法约定</h3><p>这里暂时用两种方式  </p><ol><li><p>结对review</p><ul><li>在项目或者需求计划完成时由reviewer或者项目负责人对关键功能点进行评估是否进行结对review</li><li>当需要进行结对review的功能点开发完成后，由codeowner通知review约定一个具体时间对关键代码的解说，reviewer跟着coderowner的流程进行review提出可能隐藏的逻辑错误。</li></ul></li><li><p>异步review</p><ul><li>codeowner每天提交完整的可编译的代码。</li><li>codeviewer每天拉取完整的代码。<ul><li>项目实际开发天数&gt;7人日（含）：<br>在项目阶段的每个周四固定一个时间段进行已提交的完整代码review。再另外在提测前两天进行review一遍。如果两者时间有冲突，那么以提测前 两天为主。</li><li>如果项目或者需求实际时间小于7人日，在提测前两天进行review一遍。</li></ul></li><li>codeowner在接收到review comment时。最迟第二天进行答复。和codereview协商完成comment处理。</li><li>codereview在提测前一天下午前，进行完整审查。寻找未处理的reviewcomment灭掉。</li></ul></li></ol><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><h3 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h3><ol><li>代码上传到Gitlab  </li><li>配置好upsource代码库</li><li>安装upsource idea插件</li></ol><h3 id="划分角色"><a href="#划分角色" class="headerlink" title="划分角色"></a>划分角色</h3><p>CODEROWNER: 代码作者  </p><p>REVIEWER: 代码审查者  </p><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">graph TB</div><div class="line">开始 --&gt; 开发计划</div><div class="line">开发计划 --&gt; 划分角色</div><div class="line">开发计划 --&gt; review计划</div><div class="line">划分角色 --&gt; 开发提交代码</div><div class="line">review计划 --&gt; 开发提交代码</div><div class="line">开发提交代码 --&gt; 进行review</div><div class="line">进行review --&gt; 开发提交代码</div><div class="line">进行review --&gt; 提测</div></pre></td></tr></table></figure><h3 id="核心流程详解"><a href="#核心流程详解" class="headerlink" title="核心流程详解"></a>核心流程详解</h3><ol><li>划分角色和review计划制定<ul><li>开发计划制定后进行角色划分。code reviewer一般是项目负责人。同时也可以是coder</li><li>rewiver将要进行的项目上传到gitlab和<a href="http://10.5.117.151:8080/" target="_blank" rel="external">upsource</a>。并配置好项目在upsource上的配置。</li><li>coder 配置好idea插件</li><li>根据功能划分制定review方式。</li></ul></li><li><p>按照功能进行开发</p></li><li><p>在功能开发过程中按照指定好的review计划进行codereview</p></li></ol><h2 id="CODE-REVIEW的方法"><a href="#CODE-REVIEW的方法" class="headerlink" title="CODE REVIEW的方法"></a>CODE REVIEW的方法</h2><h3 id="代码审查方式"><a href="#代码审查方式" class="headerlink" title="代码审查方式"></a>代码审查方式</h3><ul><li>关注点<br>  代码审查清单列表</li><li><p>代码的设计是否符合要求</p></li><li><p>逻辑是否正确</p></li></ul><h3 id="执行过程"><a href="#执行过程" class="headerlink" title="执行过程"></a>执行过程</h3><ul><li>角色：<ul><li>Reviewer<br>reviewer为各个项目负责人可以同时是CodeOwner</li><li>CodeOwner<br>CoderOwner为这个代码的作者,</li></ul></li></ul><p>每天由Codeowner提交代码。Reviewer通过idea插件或者 upsource的hub页面筛查自己需要 审查的代码进行审查。并提交相关建议。</p><h3 id="结果反馈"><a href="#结果反馈" class="headerlink" title="结果反馈"></a>结果反馈</h3><p>略</p><h2 id="审查工具和附件"><a href="#审查工具和附件" class="headerlink" title="审查工具和附件"></a>审查工具和附件</h2><ul><li><a href="http://10.5.117.151:8080" target="_blank" rel="external">upsource</a></li><li><p><a href="http://note.youdao.com/noteshare?id=767a7fea1df64b72d5e06ffe9f3da103" target="_blank" rel="external">注释模板设置方式</a></p></li><li><p><a href="http://note.youdao.com/noteshare?id=79263de59433b0f710641c1966ca8785" target="_blank" rel="external">代码审查清单</a></p></li><li><a href="http://note.youdao.com/noteshare?id=767a7fea1df64b72d5e06ffe9f3da103" target="_blank" rel="external">git注释模板</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;建立完善的代码审查机制有助于提升开发团队的协作能力，和提升代码质量。并不是件简单的事情。不同团队所处的公司，项目客
      
    
    </summary>
    
      <category term="技术之外" scheme="http://www.lilhui.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/"/>
    
    
      <category term="代码审查" scheme="http://www.lilhui.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5/"/>
    
      <category term="CODEREVIEW" scheme="http://www.lilhui.com/tags/CODEREVIEW/"/>
    
  </entry>
  
  <entry>
    <title>【代码审查系列2】CODE REVIEW 代码审查分类-以及选取方式</title>
    <link href="http://www.lilhui.com/2019/06/04/article/codereview/article_2/"/>
    <id>http://www.lilhui.com/2019/06/04/article/codereview/article_2/</id>
    <published>2019-06-04T03:19:03.000Z</published>
    <updated>2019-06-04T03:46:17.077Z</updated>
    
    <content type="html"><![CDATA[<p>代码审查主要可以划分4种类型。每一种代码审查类型都有它特有的优缺点。<br>在高层面，代码审查归为两大类：正式的审查，轻量级的审查。以下详细说明：</p><h2 id="正式的审查"><a href="#正式的审查" class="headerlink" title="正式的审查"></a>正式的审查</h2><p>正式的审查与开发流程绑定作为流程中不可或缺的一部分。实践方式有很多种，其中最流行的实践方式是 范根检查法（Faganinspection）。它为视图寻找代码缺陷提供了一种非常结构化的流程，并且，还可以用于发现规范中的或者设计中的缺陷。</p><h3 id="范根检查法步骤"><a href="#范根检查法步骤" class="headerlink" title="范根检查法步骤"></a>范根检查法步骤</h3><ol><li>计划</li><li>概述</li><li>准备</li><li>召开检查会议</li><li>重做</li><li>追查</li></ol><p>其基本思想为：预先制定好每一个步骤所需要达到的输出要求。当进行到某个过程时，检查现在的输出，并与之前指定的理想输出要求做比较。然后，由此决定是否进入下一个步骤。或者仍需在当前步骤继续工作。这种结构化的流程比较繁琐，用的不多。成本较高。一般团队很少使用。然而，如果开发的软件生死攸关，会因为有缺陷而让人丧命，那么以这种结构化的方式查找软件缺陷就显得很合理。比如动车调度，飞机自动驾驶等等。</p><h2 id="轻量级审查"><a href="#轻量级审查" class="headerlink" title="轻量级审查"></a>轻量级审查</h2><p>相比于正式的代码审查，轻量级代码审查正在被更多的开发团队所使用。<br>其子分类有：</p><ol><li><strong>瞬时代码审查，也称为结对编程</strong>。 </li></ol><ul><li><p><strong>一般情况</strong>：<br>  当一个开发者在敲代码的同时，另一个开发盯着代码，注意着代码中潜在的问题，并在此过程中给出提升代码质量的建议。</p></li><li><p><strong>解决复杂问题的情况</strong>：  </p><p>  此种方法比较适用于，仔细找解决方案的时候两个大脑汇集起来增加成功的概率。让两个头脑思考同一个问题，并且互相讨论可行的方案，这样你更可能覆盖到问题的一些边界情况。在遇到需要很多复杂业务逻辑的任务时候，可以用结对编程。</p></li><li><p><strong>需要学习新技术时候的情况</strong>：  </p></li></ul><p>例如：在使用一个新的框架，或者在探索之前没用过的新技术。最好还是单独行动，因为这时可以根据自己的情况作出快速调整。为了弄清楚技术是如何工作的，需要网络上搜索大量资料。或者阅读文档。这时，结对编程帮助就不大，因为不同的人可能获取知识的方式不同。另一方面，当你被问题卡主之后，与同事之间交流一下解决方案，往往会有意想不到的收获。</p><ul><li><p><strong>开发者水平差距问题的影响</strong>：  </p><p>  当一个初级开发者和高级开发者进行结对编程，效果并不好。在初级代码开发者负责写代码时，坐在旁边的高级程序员可能因为他写的太慢而感到烦恼。如此设定，这个高级程序员的能力就被限制住了，从而浪费时间。当键盘在高级程序员手上时，又敲得太快，初级程序员跟不上高级程序员的思路。几分钟后，初级程序员就迷失在代码上下文了，或者需要更多的时间解释代码的含义。徒增时间成本。</p></li><li><p><strong>总结</strong><br>  结对编程适用于两个有相似经验水平的开发者处理复杂的业务问题的情况。</p></li></ul><ol><li><strong>同步代码审查，既时代码审查</strong>。</li></ol><ul><li><p><strong>运行方式</strong>：</p><p>  一个开发者独自编写代码，当她写完代码后，立即找代码审查者进行审查。审查者来到开发者的桌前，看着同一个屏幕，一起审查、讨论和改进代码。</p></li><li><p><strong>审查者不清楚这个任务的目标时</strong>：    </p><p>  这种代码审查类型会很有效果。它会在这种情况下发生：团队里没有优化会议，或者sprint计划会议，来预先讨论每一项任务。此种做法会导致一种结果：只有特定的开发人员才能知道某项任务的需求。这种情况下，在代码审查之前，向审查者介绍下任务的目标是很有帮助的。</p></li><li><p><strong>期待大量的代码改进时</strong>：如果代码编写者缺乏经验，写出的代码需要很大的改进，那么同步代码审查也很有效。<br>  如果一个经验丰富的高级开发者将要对一个很初级的程序员写出的一段代码进行审查，那么，当初级程序员写完代码后和高级开发者一起改进这块代码，效率是远远高于初级程序员一个人看的。<br>  缺点：它强行切换了审查者的思路，不仅让审查者感到沮丧，也拖慢了整个团队的效率。</p></li></ul><ol><li><strong>异步的代码审查，工具支持的代码审查</strong>。  </li></ol><ul><li><p><strong>运行方式</strong>：<br>  开发者在写完代码后，让这些代码对审查者课件，让后开始他的下一个任务。当审查者有时间了，他会在自己的桌子上按自己的时间表进行审查。他不需要和开发者进行沟通，而是通过工具写一些评论。在完成审查后，那些工具会把评论和需要改动的通知给开发者。开发者就会根据评论改进代码，同样的，以自己的时间进行这些事情。这种循环，会以代码改动再次提交到审查者这里又重新开始。开发者修改代码，知道没有评论需要改进。最后改动完成，并且同意，合并到主分支。同步和异步的代码审查有较大的不同。</p></li><li><p><strong>好处</strong>：<br>  没有直接的依赖，异步发生。开发者不需要直接依赖于审查者，并且时间安排相对自由。</p></li><li><p><strong>缺点</strong>：<br>  可能有许多次循环的审查，可能持续好几天，最终被接受。可能发生的详情如下：当开发者完成代码后，需要几个小时候审查者才开始做代码审查。很多事会后，审查者给出的建议在第二天才能被开发者修复。这样，第一次审查周期就用了一天，如果有多次循环，审查的时间久延续了一整周，还不算代码和测试的时间。</p></li><li><strong>解决方案</strong>：<br>  在团队里，我们规定，每天上午，每个开发者在开始做其他工作之前，都需要处理挤压的代码审查任务，同样的，在中午午休结束后也类似的工作安排。在较长的休息时间后，开发者已经不出在他的代码思路里了。这时进行代码审查，冰没有强制他们进行不自然的思路切换，并且能够让代码在合适的时间内得到审查。</li><li><strong>总结</strong>：异步的代码审查应该作为每一个专业开发团队的默认选项。但是在为什么这么做之前，要想清楚这些代码审查分类原则。</li></ul><ol><li><strong>偶尔的代码审查，基于回忆的代码审查</strong>。</li></ol><ul><li><p><strong>执行方式</strong>：</p><p>  坐在会议室，一个开发者展示并解释他最近写的一段困难的代码。其他开发者尝试寻找潜在的缺陷，发表评论，给出如何改进代码的建议。  </p></li><li><p><strong>适用场景</strong>：  </p><p>  当整个团队都没有代码审查的经验时，把每个人都聚集起来，一起做代码审查，这样弄几次后，可能帮助每个人理解代码审查的目标和意义。长远看来，此种方式并不是一个合适的技术，因为让劝阻审核一段代码是很低效的。</p></li></ul><h2 id="如何选择"><a href="#如何选择" class="headerlink" title="如何选择"></a>如何选择</h2><ol><li>正式的代码审查，不流行，较难实现较难用于实践。</li><li>轻量级的代码审查选择<ol><li>瞬时代码审查用于结对编程，在解决复杂业务时候使用。</li><li>同步代码审查，用于审查者不知道大量改进时。</li><li>异步审查，避免了强行切换思路带来的问题，对大多数用例都工作的很好。</li><li>偶尔的代码审查，对于专业团队来说不是长期的选择。</li></ol></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>主要用轻量级代码审查。在轻量级代码审查中按照不同情况进行选择审查方式。</p><ol><li>默认使用异步审查。</li><li>在开发一个新系统新业务时候，评估业务复杂度如果复杂度高，进行结对编程。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;代码审查主要可以划分4种类型。每一种代码审查类型都有它特有的优缺点。&lt;br&gt;在高层面，代码审查归为两大类：正式的审查，轻量级的审查。以下详细说明：&lt;/p&gt;
&lt;h2 id=&quot;正式的审查&quot;&gt;&lt;a href=&quot;#正式的审查&quot; class=&quot;headerlink&quot; title=&quot;正
      
    
    </summary>
    
      <category term="技术之外" scheme="http://www.lilhui.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/"/>
    
    
      <category term="代码审查" scheme="http://www.lilhui.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5/"/>
    
      <category term="CODEREVIEW" scheme="http://www.lilhui.com/tags/CODEREVIEW/"/>
    
  </entry>
  
  <entry>
    <title>【代码审查系列1】CODE REVIEW机制目标规划</title>
    <link href="http://www.lilhui.com/2019/06/04/article/codereview/article_1/"/>
    <id>http://www.lilhui.com/2019/06/04/article/codereview/article_1/</id>
    <published>2019-06-04T03:17:38.000Z</published>
    <updated>2019-06-04T03:46:17.084Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>代码审查是软件生产过程中用于把控软件质量的一种方式。通常的目的是查找系统缺陷，保证软件总体质量和提高开发者自身水平。如何建立长远的审核机制，以保证代码的持续健康优化，是个相对复杂的过程。本文对代码审查的规划做一个简单的分析。</p></blockquote><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>代码规范化</li><li>更好的设计</li><li>技术成长</li></ul><h3 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h3><p>通过制度和规范的手段对代码审核进行合理化推行，在执行的潜移默化中落实到实际操作 最终在团队变更或者其他事物发生变迁的情况下依然能够完整执行并且收效。</p><h2 id="目前的状态"><a href="#目前的状态" class="headerlink" title="目前的状态"></a>目前的状态</h2><p>当前项目的状态是：项目小，数量多，项目人员分散。  </p><p>外部环境的状态：需求不定期加入，维护性工作不定期进行。  </p><p>内部人员状态：<br>对于老员工来讲，习惯旧有的思考方式和做事方式。<br>对社招新员工来讲，带着之前的思维方式做事风格，还在适应新环境中。<br>对于校招员工来讲规则尚未建立，接受新鲜事物规则较快。</p><h2 id="推行面临的问题"><a href="#推行面临的问题" class="headerlink" title="推行面临的问题"></a>推行面临的问题</h2><ul><li>时间不够<br>  应对措施：在开发计划制定时预留1-2天时间进行review。</li><li>需求变化<br>  应对措施：在需求变化后重新进行review.</li><li>人员态度<br>  应对措施：局部某个项目开始进行review，养成习惯，各个击破。进而扩展到整体团队review</li></ul><h2 id="目标分解"><a href="#目标分解" class="headerlink" title="目标分解"></a>目标分解</h2><h3 id="阶段一"><a href="#阶段一" class="headerlink" title="阶段一"></a>阶段一</h3><ul><li>完成代码规范<ul><li>CODE REVIEW习惯养成<br>CODE REVIEW机制建立初始化，团队内部养成习惯，作为工作的一部分。</li></ul></li></ul><h3 id="阶段二"><a href="#阶段二" class="headerlink" title="阶段二"></a>阶段二</h3><ul><li>更好的设计<ul><li>发现隐藏缺陷Bug<br>发现并尽量避免隐藏Bug的发生，对不合理的设计进行重新评审。</li></ul></li></ul><h3 id="阶段三"><a href="#阶段三" class="headerlink" title="阶段三"></a>阶段三</h3><ul><li>技术成长<ul><li>REVIEWER能力的提升<br>提升代码审查的效率和准确率。</li><li>CODER的技术提升<br>提升代码设计的质量</li></ul></li></ul><p>参考：</p><ul><li><a href="http://note.youdao.com/noteshare?id=7c240547861df502ea232411563f2153" target="_blank" rel="external">审查类型和选择方式</a></li></ul><h2 id="代码审查执行方法"><a href="#代码审查执行方法" class="headerlink" title="代码审查执行方法"></a>代码审查执行方法</h2><ul><li><a href="http://note.youdao.com/noteshare?id=ca823b51d2e0bf44b5ddbc2ac3f0ec5a" target="_blank" rel="external">代码审查执行方法</a></li></ul><h2 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h2><ul><li><a href="http://note.youdao.com/noteshare?id=767a7fea1df64b72d5e06ffe9f3da103" target="_blank" rel="external">注释模板设置方式</a></li></ul><ul><li><a href="http://note.youdao.com/noteshare?id=79263de59433b0f710641c1966ca8785" target="_blank" rel="external">代码审查清单</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;代码审查是软件生产过程中用于把控软件质量的一种方式。通常的目的是查找系统缺陷，保证软件总体质量和提高开发者自身水平
      
    
    </summary>
    
      <category term="技术之外" scheme="http://www.lilhui.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/"/>
    
    
      <category term="代码审查" scheme="http://www.lilhui.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5/"/>
    
      <category term="CODEREVIEW" scheme="http://www.lilhui.com/tags/CODEREVIEW/"/>
    
  </entry>
  
  <entry>
    <title>团队管理中的三个时期</title>
    <link href="http://www.lilhui.com/2019/06/04/article/teammanager/teammanager_0/"/>
    <id>http://www.lilhui.com/2019/06/04/article/teammanager/teammanager_0/</id>
    <published>2019-06-04T03:07:39.000Z</published>
    <updated>2019-06-04T03:39:28.983Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>团队建设</p></blockquote><h2 id="前期重教育"><a href="#前期重教育" class="headerlink" title="前期重教育"></a>前期重教育</h2><blockquote><p>完成团队前期的人员了解和结构梳理</p></blockquote><h2 id="中期重规范"><a href="#中期重规范" class="headerlink" title="中期重规范"></a>中期重规范</h2><blockquote><p>建立团队运作规范，技术规范，技术外的流程规范</p></blockquote><h2 id="后期重辅导"><a href="#后期重辅导" class="headerlink" title="后期重辅导"></a>后期重辅导</h2><blockquote><p>具体协助过程的配合</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;团队建设&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前期重教育&quot;&gt;&lt;a href=&quot;#前期重教育&quot; class=&quot;headerlink&quot; title=&quot;前期重教育&quot;&gt;&lt;/a&gt;前期重教育&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;完成团队前期
      
    
    </summary>
    
      <category term="技术之外" scheme="http://www.lilhui.com/categories/%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96/"/>
    
    
      <category term="管理" scheme="http://www.lilhui.com/tags/%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch 配置解释</title>
    <link href="http://www.lilhui.com/2018/10/31/search/es_1/"/>
    <id>http://www.lilhui.com/2018/10/31/search/es_1/</id>
    <published>2018-10-31T08:46:45.000Z</published>
    <updated>2018-10-31T08:48:56.787Z</updated>
    
    <content type="html"><![CDATA[<h2 id="elasticsearch-yml"><a href="#elasticsearch-yml" class="headerlink" title="elasticsearch.yml"></a>elasticsearch.yml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># ======================== Elasticsearch Configuration =========================</div><div class="line">#</div><div class="line"># NOTE: Elasticsearch comes with reasonable defaults for most settings.</div><div class="line">#       Before you set out to tweak and tune the configuration, make sure you</div><div class="line">#       understand what are you trying to accomplish and the consequences.</div><div class="line">#</div><div class="line"># The primary way of configuring a node is via this file. This template lists</div><div class="line"># the most important settings you may want to configure for a production cluster.</div><div class="line">#</div><div class="line"># Please consult the documentation for further information on configuration options:</div><div class="line"># https://www.elastic.co/guide/en/elasticsearch/reference/index.html</div><div class="line">#</div><div class="line"># ---------------------------------- Cluster -----------------------------------</div><div class="line">#</div><div class="line"># Use a descriptive name for your cluster:</div><div class="line">#</div><div class="line">cluster.name: localCluster</div><div class="line">#</div><div class="line"># ------------------------------------ Node ------------------------------------</div><div class="line">#</div><div class="line"># Use a descriptive name for the node:</div><div class="line"># 默认从   /lib/elasticsearch-6.4.2.jar!config/names.txt选择一个</div><div class="line">node.name: node-1</div><div class="line">#</div><div class="line"># Add custom attributes to the node:</div><div class="line">#</div><div class="line">#node.attr.rack: r1</div><div class="line">#</div><div class="line"># ----------------------------------- Paths ------------------------------------</div><div class="line">#</div><div class="line"># Path to directory where to store the data (separate multiple locations by comma):</div><div class="line">#</div><div class="line">path.data: /Users/littlehui/WorkSpaces/Office/Search/es/search/data</div><div class="line">#</div><div class="line"># Path to log files:</div><div class="line">#</div><div class="line">path.logs: /Users/littlehui/WorkSpaces/Office/Search/es/search/logs</div><div class="line">#</div><div class="line"># ----------------------------------- Memory -----------------------------------</div><div class="line">#</div><div class="line"># Lock the memory on startup:</div><div class="line">#</div><div class="line">bootstrap.memory_lock: true</div><div class="line">#</div><div class="line"># Make sure that the heap size is set to about half the memory available</div><div class="line"># on the system and that the owner of the process is allowed to use this</div><div class="line"># limit.</div><div class="line">#</div><div class="line"># Elasticsearch performs poorly when the system is swapping the memory.</div><div class="line">#</div><div class="line"># ---------------------------------- Network -----------------------------------</div><div class="line">#</div><div class="line"># Set the bind address to a specific IP (IPv4 or IPv6):</div><div class="line">#</div><div class="line">network.host: 127.0.0.1</div><div class="line">#</div><div class="line"># Set a custom port for HTTP:</div><div class="line">#</div><div class="line">http.port: 9200</div><div class="line">#</div><div class="line"># For more information, consult the network module documentation.</div><div class="line">#</div><div class="line"># --------------------------------- Discovery ----------------------------------</div><div class="line">#</div><div class="line"># Pass an initial list of hosts to perform discovery when new node is started:</div><div class="line"># The default list of hosts is [&quot;127.0.0.1&quot;, &quot;[::1]&quot;]</div><div class="line">#</div><div class="line"># 当启动节点时，通过这个Ip列表进行发现，组建集群默认节点127.0.0.1，标识ipv4的回环地址</div><div class="line"># [::1]ipv6的回环地址</div><div class="line">#</div><div class="line"># es1.x默认组播 multicast</div><div class="line"># es2.x 默认单播 unicast</div><div class="line"># 注意：如果发现其他服务器中的es服务，可以不指定端口 （9300），如果发现同一个服务器的es服务，需要制定端口。</div><div class="line">#</div><div class="line"># 多播用于动态扩展配置</div><div class="line"># discovery.zen.ping.multicast</div><div class="line"># group,port,ttl,address</div><div class="line">#</div><div class="line">discovery.zen.ping.unicast.hosts: [&quot;127.0.0.1:9300&quot;, &quot;127.0.0.1:9301&quot;, &quot;127.0.0.1:9302&quot;]</div><div class="line">#</div><div class="line"># Prevent the &quot;split brain&quot; by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):</div><div class="line">#</div><div class="line">discovery.zen.minimum_master_nodes: 2</div><div class="line"># 节点间心跳 秒</div><div class="line">discovery.zen.ping_timeout: 10</div><div class="line">#</div><div class="line"># For more information, consult the zen discovery module documentation.</div><div class="line">#</div><div class="line"># ---------------------------------- Gateway -----------------------------------</div><div class="line">#</div><div class="line"># Block initial recovery after a full cluster restart until N nodes are started:</div><div class="line">#</div><div class="line">#gateway.recover_after_nodes: 3</div><div class="line">#</div><div class="line"># For more information, consult the gateway module documentation.</div><div class="line">#</div><div class="line"># ---------------------------------- Various -----------------------------------</div><div class="line">#</div><div class="line"># Require explicit names when deleting indices:</div><div class="line">#</div><div class="line">#action.destructive_requires_name: true</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;elasticsearch-yml&quot;&gt;&lt;a href=&quot;#elasticsearch-yml&quot; class=&quot;headerlink&quot; title=&quot;elasticsearch.yml&quot;&gt;&lt;/a&gt;elasticsearch.yml&lt;/h2&gt;&lt;figure class
      
    
    </summary>
    
      <category term="搜索" scheme="http://www.lilhui.com/categories/%E6%90%9C%E7%B4%A2/"/>
    
    
      <category term="es，配置" scheme="http://www.lilhui.com/tags/es%EF%BC%8C%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch 启动步骤</title>
    <link href="http://www.lilhui.com/2018/10/31/search/es_0/"/>
    <id>http://www.lilhui.com/2018/10/31/search/es_0/</id>
    <published>2018-10-31T06:17:34.000Z</published>
    <updated>2018-10-31T08:48:56.793Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>ES的版本迭代较快每个版本启动和运行方式有所差异，本文以6.4.2版本说明。<br>6.4.2版本下载地址：<a href="https://www.elastic.co/downloads/elasticsearch" target="_blank" rel="external">https://www.elastic.co/downloads/elasticsearch</a></p><h2 id="启动步骤"><a href="#启动步骤" class="headerlink" title="启动步骤"></a>启动步骤</h2><p>ES启动是通过下载包的 ./bin/elasticsearch叫本进行启动的。脚本定义了一些es和java的默认参数。可以通过修改脚本参数内容方式启动，控制台运行，比如修改esJVM大小等等。</p><p>Elasticsearch启动后 Elasticsearch类解析</p><p>Elasticsearch类启动时候运行main()函数，如下:</p><p>Elasticsearch初始化各种Option</p><h3 id="Elasticsearch内部"><a href="#Elasticsearch内部" class="headerlink" title="Elasticsearch内部"></a>Elasticsearch内部</h3><p>解释：</p><ol><li>运行System.setSecurityManager 配置默认管理器，默认使用的是 $JAVA_HOME/jre/lib/security/java.policy</li><li>注册Errorlistener,LogConfigurator.registerErrorListener();用于在失败的时候报错。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Main entry point for starting elasticsearch</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">final</span> String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">    <span class="comment">// we want the JVM to think there is a security manager installed so that if internal policy decisions that would be based on the</span></div><div class="line">    <span class="comment">// presence of a security manager or lack thereof act as if there is a security manager present (e.g., DNS cache policy)</span></div><div class="line">    System.setSecurityManager(<span class="keyword">new</span> SecurityManager() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkPermission</span><span class="params">(Permission perm)</span> </span>&#123;</div><div class="line">            <span class="comment">// grant all permissions so that we can later set the security manager to the one that we want</span></div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    LogConfigurator.registerErrorListener();</div><div class="line">    <span class="keyword">final</span> Elasticsearch elasticsearch = <span class="keyword">new</span> Elasticsearch();</div><div class="line">    <span class="keyword">int</span> status = main(args, elasticsearch, Terminal.DEFAULT);</div><div class="line">    <span class="keyword">if</span> (status != ExitCodes.OK) &#123;</div><div class="line">        exit(status);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>启动Elasticsearch命令行客户端EnvironmentAwareCommand和对应用来输入Terminal</li></ol><p>Elasticsearch</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">final</span> String[] args, <span class="keyword">final</span> Elasticsearch elasticsearch, <span class="keyword">final</span> Terminal terminal)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">    <span class="keyword">return</span> elasticsearch.main(args, terminal);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>EnvironmentAwareCommand</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(Terminal terminal, OptionSet options)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">    <span class="keyword">final</span> Map&lt;String, String&gt; settings = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">final</span> KeyValuePair kvp : settingOption.values(options)) &#123;</div><div class="line">        <span class="keyword">if</span> (kvp.value.isEmpty()) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UserException(ExitCodes.USAGE, <span class="string">"setting ["</span> + kvp.key + <span class="string">"] must not be empty"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (settings.containsKey(kvp.key)) &#123;</div><div class="line">            <span class="keyword">final</span> String message = String.format(</div><div class="line">                    Locale.ROOT,</div><div class="line">                    <span class="string">"setting [%s] already set, saw [%s] and [%s]"</span>,</div><div class="line">                    kvp.key,</div><div class="line">                    settings.get(kvp.key),</div><div class="line">                    kvp.value);</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UserException(ExitCodes.USAGE, message);</div><div class="line">        &#125;</div><div class="line">        settings.put(kvp.key, kvp.value);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    putSystemPropertyIfSettingIsMissing(settings, <span class="string">"path.data"</span>, <span class="string">"es.path.data"</span>);</div><div class="line">    putSystemPropertyIfSettingIsMissing(settings, <span class="string">"path.home"</span>, <span class="string">"es.path.home"</span>);</div><div class="line">    putSystemPropertyIfSettingIsMissing(settings, <span class="string">"path.logs"</span>, <span class="string">"es.path.logs"</span>);</div><div class="line"></div><div class="line">    execute(terminal, options, createEnv(terminal, settings));</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>Elasticsearch</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Elasticsearch() &#123;</div><div class="line">    <span class="keyword">super</span>(<span class="string">"starts elasticsearch"</span>, () -&gt; &#123;&#125;); <span class="comment">// we configure logging later so we override the base class from configuring logging</span></div><div class="line">    versionOption = parser.acceptsAll(Arrays.asList(<span class="string">"V"</span>, <span class="string">"version"</span>),</div><div class="line">        <span class="string">"Prints elasticsearch version information and exits"</span>);</div><div class="line">    daemonizeOption = parser.acceptsAll(Arrays.asList(<span class="string">"d"</span>, <span class="string">"daemonize"</span>),</div><div class="line">        <span class="string">"Starts Elasticsearch in the background"</span>)</div><div class="line">        .availableUnless(versionOption);</div><div class="line">    pidfileOption = parser.acceptsAll(Arrays.asList(<span class="string">"p"</span>, <span class="string">"pidfile"</span>),</div><div class="line">        <span class="string">"Creates a pid file in the specified path on start"</span>)</div><div class="line">        .availableUnless(versionOption)</div><div class="line">        .withRequiredArg()</div><div class="line">        .withValuesConvertedBy(<span class="keyword">new</span> PathConverter());</div><div class="line">    quietOption = parser.acceptsAll(Arrays.asList(<span class="string">"q"</span>, <span class="string">"quiet"</span>),</div><div class="line">        <span class="string">"Turns off standard output/error streams logging in console"</span>)</div><div class="line">        .availableUnless(versionOption)</div><div class="line">        .availableUnless(daemonizeOption);</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li><p>创建Setting（HashMap)设置Elasticsearch配置</p></li><li><p>进行命令行相关的设置，初始化之后，跳转到Bootstrap中进行操作 init</p></li></ol><p>Elasticsearch</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(Terminal terminal, OptionSet options, Environment env)</span> <span class="keyword">throws</span> UserException </span>&#123;</div><div class="line">    <span class="keyword">if</span> (options.nonOptionArguments().isEmpty() == <span class="keyword">false</span>) &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UserException(ExitCodes.USAGE, <span class="string">"Positional arguments not allowed, found "</span> + options.nonOptionArguments());</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (options.has(versionOption)) &#123;</div><div class="line">        <span class="keyword">final</span> String versionOutput = String.format(</div><div class="line">                Locale.ROOT,</div><div class="line">                <span class="string">"Version: %s, Build: %s/%s/%s/%s, JVM: %s"</span>,</div><div class="line">                Version.displayVersion(Version.CURRENT, Build.CURRENT.isSnapshot()),</div><div class="line">                Build.CURRENT.flavor().displayName(),</div><div class="line">                Build.CURRENT.type().displayName(),</div><div class="line">                Build.CURRENT.shortHash(),</div><div class="line">                Build.CURRENT.date(),</div><div class="line">                JvmInfo.jvmInfo().version());</div><div class="line">        terminal.println(versionOutput);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> daemonize = options.has(daemonizeOption);</div><div class="line">    <span class="keyword">final</span> Path pidFile = pidfileOption.value(options);</div><div class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> quiet = options.has(quietOption);</div><div class="line"></div><div class="line">    <span class="comment">// a misconfigured java.io.tmpdir can cause hard-to-diagnose problems later, so reject it immediately</span></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        env.validateTmpFile();</div><div class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UserException(ExitCodes.CONFIG, e.getMessage());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        init(daemonize, pidFile, quiet, env);</div><div class="line">    &#125; <span class="keyword">catch</span> (NodeValidationException e) &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UserException(ExitCodes.CONFIG, e.getMessage());</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> daemonize, <span class="keyword">final</span> Path pidFile, <span class="keyword">final</span> <span class="keyword">boolean</span> quiet, Environment initialEnv)</span></span></div><div class="line"><span class="function">    <span class="keyword">throws</span> NodeValidationException, UserException </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        Bootstrap.init(!daemonize, pidFile, quiet, initialEnv);</div><div class="line">    &#125; <span class="keyword">catch</span> (BootstrapException | RuntimeException e) &#123;</div><div class="line">        <span class="comment">// format exceptions to the console in a special way</span></div><div class="line">        <span class="comment">// to avoid 2MB stacktraces from guice, etc.</span></div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> StartupException(e);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Bootstrap内部"><a href="#Bootstrap内部" class="headerlink" title="Bootstrap内部"></a>Bootstrap内部</h3><ol><li>初始化一个KeepAlive线程，内部的countDownLatch用于启动之后的心跳。保证节点运行期间Bootstrap一直存在。可以接受相关的命令退出</li><li>做了一些检查，SSL加密customConfFile</li><li>创建PID文件</li><li>checkLucene版本</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">   * This method is invoked by &#123;<span class="doctag">@link</span> Elasticsearch#main(String[])&#125; to startup elasticsearch.</span></div><div class="line"><span class="comment">   */</span></div><div class="line">  <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(</span></span></div><div class="line"><span class="function"><span class="params">          <span class="keyword">final</span> <span class="keyword">boolean</span> foreground,</span></span></div><div class="line"><span class="function"><span class="params">          <span class="keyword">final</span> Path pidFile,</span></span></div><div class="line"><span class="function"><span class="params">          <span class="keyword">final</span> <span class="keyword">boolean</span> quiet,</span></span></div><div class="line"><span class="function"><span class="params">          <span class="keyword">final</span> Environment initialEnv)</span> <span class="keyword">throws</span> BootstrapException, NodeValidationException, UserException </span>&#123;</div><div class="line">      <span class="comment">// force the class initializer for BootstrapInfo to run before</span></div><div class="line">      <span class="comment">// the security manager is installed</span></div><div class="line">      BootstrapInfo.init();</div><div class="line"></div><div class="line">      INSTANCE = <span class="keyword">new</span> Bootstrap();</div><div class="line"></div><div class="line">      <span class="keyword">final</span> SecureSettings keystore = loadSecureSettings(initialEnv);</div><div class="line">      <span class="keyword">final</span> Environment environment = createEnvironment(foreground, pidFile, keystore, initialEnv.settings(), initialEnv.configFile());</div><div class="line">      <span class="keyword">try</span> &#123;</div><div class="line">          LogConfigurator.configure(environment);</div><div class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> BootstrapException(e);</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">if</span> (environment.pidFile() != <span class="keyword">null</span>) &#123;</div><div class="line">          <span class="keyword">try</span> &#123;</div><div class="line">              PidFile.create(environment.pidFile(), <span class="keyword">true</span>);</div><div class="line">          &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">              <span class="keyword">throw</span> <span class="keyword">new</span> BootstrapException(e);</div><div class="line">          &#125;</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">final</span> <span class="keyword">boolean</span> closeStandardStreams = (foreground == <span class="keyword">false</span>) || quiet;</div><div class="line">      <span class="keyword">try</span> &#123;</div><div class="line">          <span class="keyword">if</span> (closeStandardStreams) &#123;</div><div class="line">              <span class="keyword">final</span> Logger rootLogger = ESLoggerFactory.getRootLogger();</div><div class="line">              <span class="keyword">final</span> Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class);</div><div class="line">              <span class="keyword">if</span> (maybeConsoleAppender != <span class="keyword">null</span>) &#123;</div><div class="line">                  Loggers.removeAppender(rootLogger, maybeConsoleAppender);</div><div class="line">              &#125;</div><div class="line">              closeSystOut();</div><div class="line">          &#125;</div><div class="line"></div><div class="line">          <span class="comment">// fail if somebody replaced the lucene jars</span></div><div class="line">          checkLucene();</div><div class="line"></div><div class="line">          <span class="comment">// install the default uncaught exception handler; must be done before security is</span></div><div class="line">          <span class="comment">// initialized as we do not want to grant the runtime permission</span></div><div class="line">          <span class="comment">// setDefaultUncaughtExceptionHandler</span></div><div class="line">          Thread.setDefaultUncaughtExceptionHandler(</div><div class="line">              <span class="keyword">new</span> ElasticsearchUncaughtExceptionHandler(() -&gt; Node.NODE_NAME_SETTING.get(environment.settings())));</div><div class="line"></div><div class="line">          INSTANCE.setup(<span class="keyword">true</span>, environment);</div><div class="line"></div><div class="line">          <span class="keyword">try</span> &#123;</div><div class="line">              <span class="comment">// any secure settings must be read during node construction</span></div><div class="line">              IOUtils.close(keystore);</div><div class="line">          &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">              <span class="keyword">throw</span> <span class="keyword">new</span> BootstrapException(e);</div><div class="line">          &#125;</div><div class="line"></div><div class="line">          INSTANCE.start();</div><div class="line"></div><div class="line">          <span class="keyword">if</span> (closeStandardStreams) &#123;</div><div class="line">              closeSysError();</div><div class="line">          &#125;</div><div class="line">      &#125; <span class="keyword">catch</span> (NodeValidationException | RuntimeException e) &#123;</div><div class="line">          <span class="comment">// disable console logging, so user does not see the exception twice (jvm will show it already)</span></div><div class="line">          <span class="keyword">final</span> Logger rootLogger = ESLoggerFactory.getRootLogger();</div><div class="line">          <span class="keyword">final</span> Appender maybeConsoleAppender = Loggers.findAppender(rootLogger, ConsoleAppender.class);</div><div class="line">          <span class="keyword">if</span> (foreground &amp;&amp; maybeConsoleAppender != <span class="keyword">null</span>) &#123;</div><div class="line">              Loggers.removeAppender(rootLogger, maybeConsoleAppender);</div><div class="line">          &#125;</div><div class="line">          Logger logger = Loggers.getLogger(Bootstrap.class);</div><div class="line">          <span class="keyword">if</span> (INSTANCE.node != <span class="keyword">null</span>) &#123;</div><div class="line">              logger = Loggers.getLogger(Bootstrap.class, Node.NODE_NAME_SETTING.get(INSTANCE.node.settings()));</div><div class="line">          &#125;</div><div class="line">          <span class="comment">// HACK, it sucks to do this, but we will run users out of disk space otherwise</span></div><div class="line">          <span class="keyword">if</span> (e <span class="keyword">instanceof</span> CreationException) &#123;</div><div class="line">              <span class="comment">// guice: log the shortened exc to the log file</span></div><div class="line">              ByteArrayOutputStream os = <span class="keyword">new</span> ByteArrayOutputStream();</div><div class="line">              PrintStream ps = <span class="keyword">null</span>;</div><div class="line">              <span class="keyword">try</span> &#123;</div><div class="line">                  ps = <span class="keyword">new</span> PrintStream(os, <span class="keyword">false</span>, <span class="string">"UTF-8"</span>);</div><div class="line">              &#125; <span class="keyword">catch</span> (UnsupportedEncodingException uee) &#123;</div><div class="line">                  <span class="keyword">assert</span> <span class="keyword">false</span>;</div><div class="line">                  e.addSuppressed(uee);</div><div class="line">              &#125;</div><div class="line">              <span class="keyword">new</span> StartupException(e).printStackTrace(ps);</div><div class="line">              ps.flush();</div><div class="line">              <span class="keyword">try</span> &#123;</div><div class="line">                  logger.error(<span class="string">"Guice Exception: &#123;&#125;"</span>, os.toString(<span class="string">"UTF-8"</span>));</div><div class="line">              &#125; <span class="keyword">catch</span> (UnsupportedEncodingException uee) &#123;</div><div class="line">                  <span class="keyword">assert</span> <span class="keyword">false</span>;</div><div class="line">                  e.addSuppressed(uee);</div><div class="line">              &#125;</div><div class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> NodeValidationException) &#123;</div><div class="line">              logger.error(<span class="string">"node validation exception\n&#123;&#125;"</span>, e.getMessage());</div><div class="line">          &#125; <span class="keyword">else</span> &#123;</div><div class="line">              <span class="comment">// full exception</span></div><div class="line">              logger.error(<span class="string">"Exception"</span>, e);</div><div class="line">          &#125;</div><div class="line">          <span class="comment">// re-enable it if appropriate, so they can see any logging during the shutdown process</span></div><div class="line">          <span class="keyword">if</span> (foreground &amp;&amp; maybeConsoleAppender != <span class="keyword">null</span>) &#123;</div><div class="line">              Loggers.addAppender(rootLogger, maybeConsoleAppender);</div><div class="line">          &#125;</div><div class="line"></div><div class="line">          <span class="keyword">throw</span> e;</div><div class="line">      &#125;</div><div class="line">  &#125;</div></pre></td></tr></table></figure><h3 id="Node节点"><a href="#Node节点" class="headerlink" title="Node节点"></a>Node节点</h3><ol><li>根据Pid和是否守护进程等信息和之前是setting，创建运行时环境environment和pid文件。</li><li>检查所需的Lucene jar包</li><li>根据之前的environment,为每个plugin创建本地插件控制器：spawner</li><li>初始化本地资源（native方法进行一些OS调用和JVM信息，比如mlock/系统最大资源之类的）</li><li>初始化两种probes（探测），将提供给ES start时所需的一些进程信息和OS层面信息。</li><li>检查重复的jar包，并打印在日志中（JarHell.checkJarHell())</li></ol><h3 id="初始化Node节点（本地节点）"><a href="#初始化Node节点（本地节点）" class="headerlink" title="初始化Node节点（本地节点）"></a>初始化Node节点（本地节点）</h3><ol><li>配置一个检查非回路的IP监测点</li><li>初始化nodeId和nodeName(new NodeEnvironment)</li><li>促使华ES各个功能模块的Service和module，并将service和module绑定</li></ol><h3 id="核心：真正启动Node和keeplive线程"><a href="#核心：真正启动Node和keeplive线程" class="headerlink" title="核心：真正启动Node和keeplive线程"></a>核心：真正启动Node和keeplive线程</h3><p>node启动是在node中各个模块的胡同，通过guice获取各个module的service接口并启动<br>内部包括了master选举机制等。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;ES的版本迭代较快每个版本启动和运行方式有所差异，本文以6.4.2版本说明。&lt;br&gt;6.4.2版本下载地址：&lt;a href=&quot;https:/
      
    
    </summary>
    
      <category term="搜索" scheme="http://www.lilhui.com/categories/%E6%90%9C%E7%B4%A2/"/>
    
    
      <category term="es" scheme="http://www.lilhui.com/tags/es/"/>
    
  </entry>
  
</feed>
